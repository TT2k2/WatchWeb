//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebForm.OrderService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderService.OrderServiceSoap")]
    public interface OrderServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetTable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTable", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTableByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetTableByID(string orderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTableByID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetTableByIDAsync(string orderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Update", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Update(string orderID, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Update", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateAsync(string orderID, string status);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface OrderServiceSoapChannel : WebForm.OrderService.OrderServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceSoapClient : System.ServiceModel.ClientBase<WebForm.OrderService.OrderServiceSoap>, WebForm.OrderService.OrderServiceSoap {
        
        public OrderServiceSoapClient() {
        }
        
        public OrderServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable GetTable() {
            return base.Channel.GetTable();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetTableAsync() {
            return base.Channel.GetTableAsync();
        }
        
        public System.Data.DataTable GetTableByID(string orderID) {
            return base.Channel.GetTableByID(orderID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetTableByIDAsync(string orderID) {
            return base.Channel.GetTableByIDAsync(orderID);
        }
        
        public bool Update(string orderID, string status) {
            return base.Channel.Update(orderID, status);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAsync(string orderID, string status) {
            return base.Channel.UpdateAsync(orderID, status);
        }
    }
}
